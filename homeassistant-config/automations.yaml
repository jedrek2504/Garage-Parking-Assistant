# automations.yaml

- alias: Send Distance Thresholds and Brightness to Raspberry Pi
  trigger:
    - platform: state
      entity_id:
        - input_number.red_distance_threshold_front
        - input_number.orange_distance_threshold_front
        - input_number.red_distance_threshold_left
        - input_number.orange_distance_threshold_left
        - input_number.red_distance_threshold_right
        - input_number.orange_distance_threshold_right
        - input_number.led_brightness
        - input_boolean.parking_system_enabled
  action:
    - service: mqtt.publish
      data:
        topic: garage/parking/settings
        payload: >
          {
            "red_distance_threshold_front": {{ states('input_number.red_distance_threshold_front') | int }},
            "orange_distance_threshold_front": {{ states('input_number.orange_distance_threshold_front') | int }},
            "red_distance_threshold_left": {{ states('input_number.red_distance_threshold_left') | int }},
            "orange_distance_threshold_left": {{ states('input_number.orange_distance_threshold_left') | int }},
            "red_distance_threshold_right": {{ states('input_number.red_distance_threshold_right') | int }},
            "orange_distance_threshold_right": {{ states('input_number.orange_distance_threshold_right') | int }},
            "brightness": {{ states('input_number.led_brightness') | int }},
            "enabled": {{ (states('input_boolean.parking_system_enabled') == 'on') | string | lower }}
          }
  id: send_distance_thresholds_and_brightness

- alias: Send Settings on Request
  trigger:
    - platform: mqtt
      topic: garage/parking/settings/get
  action:
    - service: mqtt.publish
      data:
        topic: garage/parking/settings
        payload: >
          {
            "red_distance_threshold_front": {{ states('input_number.red_distance_threshold_front') | int }},
            "orange_distance_threshold_front": {{ states('input_number.orange_distance_threshold_front') | int }},
            "red_distance_threshold_left": {{ states('input_number.red_distance_threshold_left') | int }},
            "orange_distance_threshold_left": {{ states('input_number.orange_distance_threshold_left') | int }},
            "red_distance_threshold_right": {{ states('input_number.red_distance_threshold_right') | int }},
            "orange_distance_threshold_right": {{ states('input_number.orange_distance_threshold_right') | int }},
            "brightness": {{ states('input_number.led_brightness') | int }},
            "enabled": {{ (states('input_boolean.parking_system_enabled') == 'on') | string | lower }}
          }
  id: send_settings_on_request

- id: notify_if_garage_door_open_when_user_away
  alias: Notify if Garage Door is Open When User is Away
  trigger:
    - platform: state
      entity_id: input_boolean.user_is_home
      from: 'on'
      to: 'off'
  condition:
    - condition: state
      entity_id: cover.garage_door
      state: 'open'
  action:
    - service: notify.mobile_app_iphone_jedrzej
      data:
        title: 'ALARM: Otwarta wiata garażowa'
        message: 'System wykrył, że znajdujesz się poza domem, a wiata garażowa jest otwarta.'
  mode: single

- alias: Publish User Status to MQTT
  trigger:
    - platform: state
      entity_id: input_boolean.user_is_home
  action:
    - service: mqtt.publish
      data:
        topic: homeassistant/status/user_is_home
        payload: "{{ 'on' if is_state('input_boolean.user_is_home', 'on') else 'off' }}"
  id: publish_user_status

- alias: Send Garage Door State on Request
  trigger:
    - platform: mqtt
      topic: "garage/parking/garage_door/state/get"
  action:
    - service: mqtt.publish
      data:
        topic: "garage/parking/garage_door/state"
        payload: "{{ 'open' if is_state('cover.garage_door', 'open') else 'closed' }}"
  id: send_garage_state_on_request
